>>> docs = __import__('100-matrix_mul').__doc__
>>> len(docs) > 1
True
>>> docs = __import__('100-matrix_mul').matrix_mul.__doc__
>>> len(docs) > 1
True


>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
[[58, 64], [139, 154]]
>>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1], [2]])
[[5], [11], [17]]
>>> matrix_mul([[1, 2, 3], [3, 4, 4]], [[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul([[1, 'a'], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats
>>> matrix_mul([], [])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty or m_b can't be empty
>>> matrix_mul([], [[]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty or m_b can't be empty
>>> matrix_mul([[1, 2], [3, 4]], [1, 2, 3])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists or m_b must be a list of lists
>>> matrix_mul('a', [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list or m_b must be a list
>>> matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: each row of m_a must be of the same size or each row of m_b must be of the same size
