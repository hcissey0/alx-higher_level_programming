Checking module and function documentation

>>> docs = __import__('100-matrix_mul').__doc__
>>> len(docs) > 1
True
>>> docs = __import__('100-matrix_mul').matrix_mul.__doc__
>>> len(docs) > 1
True

Importing the function

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Normal testing
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

testing 1 by 2 and 2 by 2
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

testing 2 by 3 and 3 by 2
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
[[58, 64], [139, 154]]

testing 3 by 2 and 2 by 1
>>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1], [2]])
[[5], [11], [17]]

testing 2 by 3  and 2 by 3
>>> matrix_mul([[1, 2, 3], [3, 4, 4]], [[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

testing with strings
>>> matrix_mul([[1, 'a'], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats

testing empty
>>> matrix_mul([], [])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty or m_b can't be empty

testing string and matrix
>>> matrix_mul("hello world", [[1, 2], [4, 5]])
Traceback (most recent call last):
...
TypeError: m_a must be a list or m_b must be a list
>>> matrix_mul([[2, 4], [4, 3]], "hello")
Traceback (most recent call last):
...
TypeError: m_a must be a list or m_b must be a list

testing 1 by 1 and 2 by 2
>>> matrix_mul([11], [[2, 4], [3, 3]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists or m_b must be a list of lists

testing empty and 2 by 2
>>> matrix_mul([[]], [[2, 4], [2,4]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([], [[]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty or m_b can't be empty
>>> matrix_mul([[1, 2], [3, 4]], [1, 2, 3])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists or m_b must be a list of lists
>>> matrix_mul('a', [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list or m_b must be a list
>>> matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: each row of m_a must be of the same size or each row of m_b must be of the same size

>>> matrix_mul()
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
>>> matrix_mul([])
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'


