Testing the '2-matrix_divided' module
==============================

Testing for docstrings:
	>>> docstring = __import__('2-matrix_divided').__doc__
	>>> len(docstring) > 1
	True
	>>> docstring = __import__('2-matrix_divided').matrix_divided.__doc__
	>>> len(docstring) > 1
	True

Importing the function:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Defining matrices to be used for testing:
	>>> norm_mat = [[1, 2, 3], [4, 5, 6]]
	>>> float_mat = [[1.0, 2.5, 4.3], [4, 45.5, 60.2]]
	>>> varlen_mat = [[2, 4, 5, 5], [4, 5, 6]]
	>>> nonlen_mat = [[2, 3], [4, 33, 2]]
	>>> nontype_mat = [['f', 2], [True, [1]]]
	>>> empty_mats = [[], []]
	>>> empty_mat = []


Testing normal matrix and normal int:
	>>> matrix_divided(norm_mat, 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Testing normal matrix with negative int:
	>>> matrix_divided(norm_mat, -2)
	[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

Testing normal matrix with 0:
	>>> matrix_divided(norm_mat, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Testing normal matrix with float:
	>>> matrix_divided(norm_mat, 2.5)
	[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

Testing normal matrix with infinity:
	>>> matrix_divided(norm_mat, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Testing normal matrix with NaN:
	>>> matrix_divided(norm_mat, float('nan'))
	[[nan, nan, nan], [nan, nan, nan]]

Testing normal matrix with other types:
	>>> matrix_divided(norm_mat, 'print')
	Traceback (most recent call last):
	...
	TypeError: div must be a number
	>>> matrix_divided(norm_mat, True)
	Traceback (most recent call last):
	...
	TypeError: div must be a number
	>>> matrix_divided(norm_mat, [1, 2])
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Testing non len matrix:
	>>> matrix_divided(nonlen_mat, 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Testing different matrices:
	>>> matrix_divided(empty_mats, 2)
	[[], []]
	>>> matrix_divided(empty_mat, 2)
	[]
	>>> matrix_divided(3, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided(varlen_mat, 2)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size
	>>> matrix_divided(float_mat, 2)
	[[0.5, 1.25, 2.15], [2.0, 22.75, 30.1]]
	>>> matrix_divided(nontype_mat, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
